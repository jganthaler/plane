@import 'gutters';
@import 'cell';

.grid-x {
    display: flex;
    flex-flow: row wrap;
    & > .cell {
        width: 100%;
        min-width: 0;
        min-height: 0;
        flex-grow: 0;
        flex-shrink: 0;
        flex-basis: auto;
        &.auto {
            width: auto;
            flex-grow: 1;
        }
    }
}

$gutter-size: 0;
@each $name in $breakpoint-classes {

    /// Gutter Size
    @if (type-of($grid-margin-gutters) == 'map') {
        @if (map-has-key($grid-margin-gutters, $name)) {
            $gutter-size: map_get($grid-margin-gutters, $name);
        }
    } @else {
        $gutter-size: $grid-margin-gutters;
    }

    /// Write classes
    @if ($name == small) {
        .grid-container {
            @include xy-gutters($gutter-size, $gutter-type: padding);
            max-width: $grid-container;
            margin: 0 auto;
            &.fluid {
                max-width: 100%;
            }
            &.full {
                max-width: 100%;
                padding-left: 0;
                padding-right: 0;
            }
        }

        .grid-margin-x {
            @include xy-gutters($gutters: $gutter-size, $gutter-type: margin, $gutter-position: right left, $negative: true);
            & > .cell {
                @include cell-properties(100%, $gutter-size);
            }
        }

    } @else {

        @include breakpoint($name) {
            .grid-container {
                @include xy-gutters($gutter-size, $gutter-type: padding);
            }

            .grid-margin-x {
                @include xy-gutters($gutters: $gutter-size, $gutter-type: margin, $gutter-position: right left, $negative: true);
                & > .cell {
                    @include cell-properties(100%, $gutter-size);
                }
            }
        }

        // Sizing (percentage)
        @include breakpoint($name) {
            @for $i from 1 through $grid-columns {
                // Sizing (percentage)
                .grid-x > .#{$name}-#{$i} {
                    @include cell-properties($i, 0);
                }
            }
        }

        // Margins
        @include breakpoint($name) {
            @for $i from 1 through $grid-columns {
                // Sizing (percentage)
                .grid-margin-x > .#{$name}-#{$i} {
                    @include cell-properties($i, $gutter-size);
                }
            }
        }

        /// Offsets
        @include breakpoint($name) {
            @for $i from 1 through $grid-columns {
                // Offsets
                $offset: $i - 1;

                .#{$name}-offset-#{$offset} {
                    margin-left: #{xy-cell-size($offset)};
                }

                .grid-margin-x > .#{$name}-offset-#{$offset} {
                    margin-left: calc(#{xy-cell-size($offset)} + #{$gutter-size / 2});
                }
            }
        }
    }
}